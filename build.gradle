plugins {
    id 'java-gradle-plugin'
    id 'groovy'

    id 'eclipse'

    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.0'

    id 'org.cadixdev.licenser' version '0.6.1'
}

group = 'ca.stellardrift'
description = 'A Gradle plugin to manage patches for Git repositories'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.optimizationOptions.indy = true
}

license {
    header = file('LICENSE')
    include '**/*.java'
    include '**/*.groovy'
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        withType(MavenPublication).configureEach {
            pom {
                description = project.description
            }
        }
    }
}

tasks.named('javadocJar', Jar).configure {
    dependsOn 'groovydoc'
    archiveClassifier = 'groovydoc'
    from groovydoc.destinationDir
}

validatePlugins {
    ignoreFailures = true
    failOnWarning = false // abstract classes should be ok without annotations?
}

gradlePlugin {
    plugins {
        gitpatcherPlugin {
            id = 'ca.stellardrift.gitpatcher'
            implementationClass = 'net.minecrell.gitpatcher.GitPatcher'
            displayName = 'gitpatcher'
            description = project.description
        }
    }
}

/*pluginBundle {
    website = 'https://github.com/zml2008/gitpatcher'
    vcsUrl = website
    description = project.description
    tags = ['git']
}*/
